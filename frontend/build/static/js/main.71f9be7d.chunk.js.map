{"version":3,"sources":["components/styles/Container.styled.js","components/styles/Header.styled.js","components/styles/Button.styled.js","components/styles/Flex.styled.js","components/Header.js","components/styles/Body.styled.js","components/styles/TextInput.styled.js","components/Body.js","components/PlotData.js","components/styles/Global.js","components/styles/ResultsFlex.styled.js","components/Results.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","_templateObject","Object","taggedTemplateLiteral","StyledHeader","header","Header_styled_templateObject","_ref","theme","colors","Title","h1","_templateObject2","Subtitle","h2","_templateObject3","Nav","nav","_templateObject4","Logo","img","_templateObject5","InputButtonData","_templateObject6","input","Button_styled_templateObject","props","side","color","ButtonUpload","Button_styled_templateObject2","_ref2","pressed","_ref3","InputButtonPlot","button","Button_styled_templateObject3","_ref4","_ref5","ButtonView","Button_styled_templateObject4","ButtonClear","Button_styled_templateObject5","Flex","Flex_styled_templateObject","FooterFlex","Flex_styled_templateObject2","Header","react_default","a","createElement","src","alt","StyledBody","body","Body_styled_templateObject","TextInput","TextInput_styled_templateObject","Body","navigate","useNavigate","_useState","useState","_useState2","slicedToArray","sampleDataFlag","setSampleDataFlag","_useState3","_useState4","randomDataFlag","setRandomDataFlag","_useState5","_useState6","selectedFile","setSelectedFile","_useState7","_useState8","barPlotFlag","setBarPlotFlag","_useState9","_useState10","distPlotFlag","setDistPlotFlag","_useState11","_useState12","scatterPlotFlag","setScatterPlotFlag","_useState13","_useState14","linePlotFlag","setLinePlotFlag","_useState15","_useState16","inputValueX","setInputValueX","_useState17","_useState18","inputValueY","setInputValueY","console","log","submit","asyncToGenerator","_regeneratorRuntime","mark","_callee","e","formData","id","result","wrap","_context","prev","next","preventDefault","FormData","Math","random","append","fetch","method","headers","sent","json","status","toConsumableArray","t0","state","stop","_x","apply","this","arguments","onSubmit","type","value","onClick","hidden","onChange","event","target","files","document","getElementById","addEventListener","click","index_es","icon","faChartSimple","faCalculator","faEllipsis","faLineChart","PlotData","react_plotly_default","data","x","y","plotType","mode","plotMode","marker","size","line","width","layout","height","title","plotTitle","xaxis","text","xtitle","yaxis","ytitle","paper_bgcolor","plot_bgcolor","font","GlobalStyles","createGlobalStyle","Global_templateObject","ResultsFlex","ResultsFlex_styled_templateObject","footer","Results","location","useLocation","setData","useEffect","getData","Results_regeneratorRuntime","response","x_name","length","xaxis_name","y_name","yaxis_name","plot","_kindOfPlot","styled_components_browser_esm","Fragment","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","react_router_dom","react_router","path","element","src_App","components_Results"],"mappings":"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","file":"static/js/main.71f9be7d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 1000px;\n  max-width: 100%;\n  padding: 0 20px;\n  margin: 0 auto;\n`;\n","import styled from \"styled-components\";\nexport const StyledHeader = styled.header`\n  @import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@200;400&family=Prompt:wght@200;400&display=swap');\n  background-color: ${({ theme }) => theme.colors.header};\n  color: #fff;\n  padding-top: 40px;\n  \n`\nexport const Title = styled.h1`\n\n  text-align: center;\n  font-weight: 400;\n  font-family: 'Nunito Sans', sans-serif;\n  font-size: 34pt;\n  margin-bottom:0;\n\n`\nexport const Subtitle = styled.h2`\n  text-align: center;\n  font-family: 'Nunito Sans', sans-serif; \n  font-weight: 200;\n  font-size: 20pt;\n  margin-top: 0;\n`\nexport const Nav = styled.nav`\n  display: flex;\n  align-item: center;\n  justify-content: space-between;\n  margin-button: 40px;\n`\nexport const Logo = styled.img``\n\nexport const Image = styled.img`\n  width: 375px;\n  margin-left: 40px;\n`\n","import styled from \"styled-components\";\n\nexport const InputButtonData = styled.input`\n  border-radius: ${props => props.side === \"left\" ? \"18px 0px 0px 18px\" : \"0px 18px 18px 0px\"};\n  border: none;\n  box-shadow: 0 0 10px rgba(0,0,0,0.12);\n  cursor: pointer;\n  font-size: 16px;\n  padding: 15px 60px;\n  background-color: ${({color}) => color || \"#30323D\"};\n  color: white;\n  font-family: 'Prompt', sans-serif;\n  font-weight: 400;\n  width: 280px;\n  height: 55px;\n`\nexport const ButtonUpload = styled.input`\n  border-radius: 50px;\n  border: 0px;\n  position: center;\n  width: 300px;\n  height: 55px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 700;\n  padding: 15px 60px;\n  color: #30323D;\n  background-color: #fff; {/* in future could change this to a white for causing action*/}\n  font-family: 'Prompt', sans-serif;\n  font-weight: 400;\n\n  \n  &:hover {\n  opacity: 0.7;\n  transform: scale(0.90);\n  }\n  \n  opacity: ${({pressed}) => pressed && 0.7};\n  transform: ${({pressed}) => pressed && \"scale(0.9)\"};\n`\nexport const InputButtonPlot = styled.button`\n  width: 230px;\n  height: 142px;\n  border-radius: ${({side}) =>\n    side === \"left\" && \"18px 0px 0px 18px\" ||\n    side === \"right\" && \"0px 18px 18px 0px\" ||\n    \"0px\"\n  };\n  border: none;\n  box-shadow: 0 0 10px rgba(0,0,0,0.12);\n  cursor: pointer;\n  background-color: ${({color}) => color || \"#30323D\"};\n  color: white;\n  line-height: 41px;\n  font-family: 'Prompt', sans-serif;\n  font-size: 24px;\n  font-weight: 400;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  row-gap: 10px;\n`\nexport const ButtonView = styled.button`\n  position: center;\n  width: 169px;\n  height: 67px;\n  left: 741px;\n  top: 857px;\n  margin-left: 2%;\n  cursor: pointer;\n\n  background: #5C80BC;\n  color: #fff;\n  border-radius: 5px;\n  border: 0px;\n\n  font-size: 22px;\n  font-family: 'Prompt', sans-serif;\n  font-weight: 400;\n`\nexport const ButtonClear = styled.button`\n  position: center;\n  width: 169px;\n  height: 67px;\n  left: 741px;\n  top: 857px;\n  margin-right: 2%;\n  cursor: pointer;\n\n  background: #30323D;\n  color: #fff;\n  border-radius: 5px;\n  border: 0px;\n\n  font-size: 22px;\n  font-family: 'Prompt', sans-serif;\n  font-weight: 400;\n`\n","import styled from \"styled-components\";\n\nexport const Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 10px 0;\n  padding: 10px;\n  & > div,\n  & > ul {\n    flex: 1;\n  };\n\n`\nexport const FooterFlex = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-content: flex-end;\n  align-items: flex-end;\n  \n  text-align: right;\n  font-weight: 400;\n  font-family: 'Nunito Sans', sans-serif;\n  font-size: 10.5pt;\n\n\n  color: #fff;\n\n  margin: 10px 0;\n  padding: 10px;\n  & > div,\n  & > ul {\n    flex: 1;\n  };\n`\n","import React from 'react';\nimport { StyledHeader, Nav, Logo, Image, Subtitle, Title} from \"./styles/Header.styled\";\nimport { Container } from \"./styles/Container.styled\";\nimport { Button } from \"./styles/Button.styled\";\nimport { Flex } from \"./styles/Flex.styled\";\n\nexport default function Header() {\n  return (\n    <StyledHeader>\n      <Container>\n        <Nav>\n          <Logo src=\"./static/images/logo.svg\" alt=\"\" />\n        </Nav> \n          <Title>Visualise</Title>\n          <Subtitle>Upload or choose an example dataset</Subtitle>\n      </Container>\n    </StyledHeader>\n  )\n}\n","\nimport styled from \"styled-components\";\n\nexport const StyledBody = styled.body`\n  @import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@200;400&family=Prompt:wght@200;400&display=swap');\n  background-color: ${({ theme }) => theme.colors.header};\n  padding: 40px 0;\n\n`\n","import styled from \"styled-components\";\n\nexport const TextInput = styled.input`\n  position: center;\n  width: 260px;\n  height: 38px;\n  margin: 1%;\n  box-shadow: 0 0 15px rgba(0,0,0,0.12);\n\n  font-family: 'Prompt', sans-serif;\n  font-weight: 400;\n\n\n  font-size: inherit;\n  text-align: center\n  color: #fff;\n  border: 0px;\n  background-color: #30323D;\n  &:focus {\n    outline: none;\n  }\n`;\n","import React, { useId } from 'react';\nimport { Container } from \"./styles/Container.styled\";\nimport { Flex , FooterFlex } from \"./styles/Flex.styled\";\nimport { StyledBody } from \"./styles/Body.styled\"\nimport { InputButtonData, InputButtonPlot, ButtonUpload, ButtonView, ButtonClear } from \"./styles/Button.styled\"\nimport { useState } from \"react\";\nimport { TextInput} from \"./styles/TextInput.styled\";\nimport { useNavigate } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee, faChartSimple, faCalculator, faLineChart, faEllipsis} from '@fortawesome/free-solid-svg-icons'\nimport { wait } from '@testing-library/user-event/dist/utils';\n\nexport default function Body(){\n  \n  const navigate = useNavigate();\n\n  const [sampleDataFlag, setSampleDataFlag] = useState(false);\n  const [randomDataFlag, setRandomDataFlag] = useState(false);\n  const [selectedFile, setSelectedFile] = useState();\n  const [barPlotFlag, setBarPlotFlag] = useState(false);\n  const [distPlotFlag, setDistPlotFlag] = useState(false);\n  const [scatterPlotFlag, setScatterPlotFlag] = useState(false);\n  const [linePlotFlag, setLinePlotFlag] = useState(false);\n  const [inputValueX, setInputValueX] = useState('x-axis');\n  const [inputValueY, setInputValueY] = useState('y-axis');\n  \n  const handleSampleData = () => {\n    setSampleDataFlag(true);\n    setRandomDataFlag(false);\n    setSelectedFile(\"\");\n    setInputValueX(\"sepal length (cm)\")\n    setInputValueY(\"sepal width (cm)\")\n  };\n\n  const handleRandomData = () => {\n    setRandomDataFlag(true);\n    setSampleDataFlag(false)\n    setSelectedFile(\"\")\n    setInputValueX(\"x-axis\")\n    setInputValueY(\"y-axis\")\n  };\n\n  const fileChangeHandler = (event) => {\n\t\tsetSelectedFile(event.target.files[0]);\n    setSampleDataFlag(false)\n    setRandomDataFlag(false)\n\t};\n\n  const handleChangeBarPlot = () => {\n    setBarPlotFlag(true);\n    setDistPlotFlag(false)\n    setScatterPlotFlag(false)\n    setLinePlotFlag(false)\n    if(sampleDataFlag){\n      setInputValueY(\"sepal width (cm)\")\n    } else if (randomDataFlag){\n      setInputValueY(\"y-axis\")\n    }\n  };\n  const handleChangeDistPlot = () => {\n    setBarPlotFlag(false);\n    setDistPlotFlag(true)\n    setScatterPlotFlag(false)\n    setLinePlotFlag(false)\n    setInputValueY(\"-\")\n  };\n  const handleChangeScatterPlot = () => {\n    setBarPlotFlag(false);\n    setDistPlotFlag(false)\n    setScatterPlotFlag(true)\n    setLinePlotFlag(false)\n    if(sampleDataFlag){\n      setInputValueY(\"sepal width (cm)\")\n    } else if (randomDataFlag){\n      setInputValueY(\"y-axis\")\n    }\n  };\n  const handleChangeLinePlot = () => {\n    setBarPlotFlag(false);\n    setDistPlotFlag(false)\n    setScatterPlotFlag(false)\n    setLinePlotFlag(true)\n    if(sampleDataFlag){\n      setInputValueY(\"sepal width (cm)\")\n    } else if (randomDataFlag){\n      setInputValueY(\"y-axis\")\n    }\n  };\n  console.log(barPlotFlag)\n  let submit = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    // TODO: returnin floats at the moment, need a better to deal with this\n    const id = Math.random();\n    formData.append(\"id_req\", id);\n    formData.append(\"sampleData\", sampleDataFlag)\n    formData.append(\"randomData\", randomDataFlag)\n    if (selectedFile) {\n      formData.append(\"file\", selectedFile)\n    } else {\n      formData.append(\"file\", \"\")\n    }\n    formData.append('plotBar', barPlotFlag);\n    formData.append('plotDist', distPlotFlag);\n    formData.append('plotScatter', scatterPlotFlag);\n    formData.append('plotLine', linePlotFlag);\n    formData.append('xaxis', inputValueX);\n    formData.append('yaxis', inputValueY);\n\n    try {\n      let result = await fetch(\"/api/files/\", {\n        method: \"POST\",\n        headers: {\n        },\n        body: formData,\n      });\n      let resultJson = await result.json();\n      \n      // TODO result.Json returns undefined status so the if statement\n      // won't work but API calls registering in the backend - \n      // Could investigate this at a later stage - probably to do with.\n      if (resultJson.status === 201) {\n        console.log(\"Posted sucessfully\")\n      } else {\n        console.log([...formData])\n        console.log(\"error occurred while posting\")\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    navigate(\"results/\", { state: {id: id} } );\n\n    //try {\n    //  let getResult = await fetch(\"\", {\n    //    method: \"GET\",\n    //  });\n    //  let getResultJson = await getResult.json();\n\n    //  if (getResultJson.status === 200) {\n    //    console.log(\"Retreived\")\n    //  } else {\n    //    console.log(\"error occured retreiving\")\n    //  }\n    //} catch (err) {\n    //  console.log(err)\n    //}\n  };\n\n  // TODO: right showing multiple pops, need a fix\n  function Upload() {\n    console.log(\"button being clicked\");\n    document.getElementById('buttonid').addEventListener('click', openDialog);\n    function openDialog() {\n      document.getElementById('fileid').click();\n    }\n  }\n\n\n  return (\n    <StyledBody>\n      <Container>\n        <form onSubmit={submit}>\n          <Flex>\n            <InputButtonData\n              type=\"button\"\n              side=\"left\"\n              value=\"sample data (iris)\"\n              onClick={handleSampleData}\n              color={sampleDataFlag ? \"#5C80BC\" : \"#30323D\"}\n            />\n            <InputButtonData\n              type=\"button\"\n              side=\"right\"\n              value=\"random data\"\n              onClick={handleRandomData} \n              color={randomDataFlag ? \"#5C80BC\" : \"#30323D\"}\n            />\n          </Flex>\n\n          <Flex>\n            <input id='fileid' type='file' hidden onChange={fileChangeHandler}/>\n            <ButtonUpload \n              onClick={Upload} \n              id='buttonid' \n              type='button' \n              value='Upload' \n              pressed={selectedFile ? true : false}/>\n          </Flex>\n\n          <Flex>\n\n            <InputButtonPlot\n              type=\"button\"\n              side=\"left\"\n              onClick={handleChangeBarPlot} \n              color={barPlotFlag ? \"#5C80BC\" : \"#30323D\"}\n            >\n              {<FontAwesomeIcon icon={faChartSimple} />} Bar\n            </InputButtonPlot>\n            <InputButtonPlot \n              type= \"button\"\n              side=\"center\" \n              onClick={handleChangeDistPlot}\n              color={distPlotFlag ? \"#5C80BC\" : \"#30323D\"}\n            >\n              {<FontAwesomeIcon icon={faCalculator} />} Distribution\n            </InputButtonPlot>\n            \n            <InputButtonPlot \n              type= \"button\"\n              side=\"center\" \n              value=\"Scatter\" \n              onClick={handleChangeScatterPlot}\n              color={scatterPlotFlag ? \"#5C80BC\" : \"#30323D\"}\n            >\n              {<FontAwesomeIcon icon={faEllipsis} />} Scatter\n            </InputButtonPlot>\n\n            <InputButtonPlot \n              type= \"button\"\n              side=\"right\" \n              value=\"Line\" \n              onClick={handleChangeLinePlot} \n              color={linePlotFlag ? \"#5C80BC\" : \"#30323D\"}\n            >\n              {<FontAwesomeIcon icon={faLineChart} />} Line\n            </InputButtonPlot>\n          </Flex>\n\n          <Flex>\n            <TextInput\n              value={inputValueX}\n              onClick={() => {\n                setInputValueX(\"\");\n              }}\n              onChange={(event) => {\n                setInputValueX(event.target.value);\n              }}\n            />\n            <TextInput\n              value={inputValueY}\n              onClick={() => {\n                setInputValueY(\"\");\n              }}\n              onChange={(event) => {\n                setInputValueY(event.target.value);\n              }}\n            />\n\n          </Flex>\n          <Flex>\n            {/* could use redirect from react-router-dom */}\n            <ButtonClear>Clear</ButtonClear>\n              <ButtonView type=\"submit\">View</ButtonView> \n          </Flex>\n        </form>\n        <FooterFlex>\n          <p>designed by Hardaya (qltj43[at]gmail.com)</p> \n        </FooterFlex>\n      </Container>\n    </StyledBody>\n  )\n}\n","\nimport React from 'react';\nimport Plot from 'react-plotly.js';\n\nexport default function PlotData (props) {\n    return (\n    <Plot\n      data={[\n        {\n          x: props.x,\n          y: props.y,\n          type: props.plotType,\n          mode: props.plotMode,\n          marker: {\n            color: '#E8C547',\n            size: 8\n          },\n          line: {\n            color: '#E8C547',\n            width: 3\n          }\n        },\n      ]}\n      layout={ \n        { \n          width: 820,\n          height: 640,\n          title: props.plotTitle + \" plot\",\n          xaxis: {\n            title: {\n              text: props.xtitle\n              },\n            },\n          yaxis: {\n            title: {\n              text: props.ytitle\n              },\n            },\n          paper_bgcolor: '#30323D',\n          plot_bgcolor: '#30323D',\n          font: {\n            color: \"#fff\"\n          }\n        }\n      }\n    />\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  * {\n    box-sizing: border-box; \n  }\n  \n  body {\n    background: ${({theme}) => theme.colors.body};\n    color: hsl(192, 100%, 9%);\n    font:size:1.15em;\n    margin: 0;\n  }\n`\n","\nimport styled from \"styled-components\";\n\nexport const ResultsFlex = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 10px 0;\n  padding: 10px;\n  & > div,\n  & > ul {\n    flex: 1;\n  };\n\n`\n","import React from \"react\";\nimport { useState, useEffect} from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport Plot from  \"./PlotData\" \nimport { StyledBody } from \"./styles/Body.styled\";\nimport { Container } from \"./styles/Container.styled\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./styles/Global\";\nimport { ResultsFlex } from \"./styles/ResultsFlex.styled\";\nimport { StyledHeader, Nav, Logo, Image, Subtitle, Title} from \"./styles/Header.styled\";\n\n\nconst theme = {\n  colors: {\n    header: \"#e4d5061\",\n    body: \"#4d5061\",\n    footer: \"#003333\"\n  }\n}\n\nconst Results = () => {\n  \n  const location = useLocation(); // get POST req id from navigation hook\n\n  let [data, setData] = useState([])\n\n  useEffect(() => {\n    getData()\n  }, [])\n  \n  let getData = async () => {\n    let response = await fetch('/api/results/' + location.state.id + \"/\")\n    let data = await response.json()\n    setData(data)\n  }\n\n  \n  // TODO the folowing logic could be better\n  const x_name = data.length === \"\" ? \"...loading\" : data.xaxis_name\n  const y_name = data.length === \"\" ? \"...loading\" : data.yaxis_name\n  const x = data.length === 0 ? \"...loading\" : data.data[x_name]\n  const y = data.length === 0 ? \"...loading\" : data.data[y_name]\n  const xtitle = data.length === 0 ? \"...loading\" : data.xaxis_name\n  const ytitle = data.length === 0 ? \"...loading\" : data.yaxis_name\n  const plotTitle = data.length === \"\" ? \"...loading\" : data.plot\n  \n  let kindOfPlot = function () {\n     if (plotTitle === \"Scatter\") {\n      const plotType = 'scatter'\n      const plotMode = 'markers'\n      return {plotType, plotMode}\n    }\n    if (plotTitle === \"Line\") {\n      const plotType = 'scatter'\n      const plotMode = 'lines+markers'\n      return {plotType, plotMode}\n    }\n    if (plotTitle === \"Bar\") {\n      const plotType = 'bar'\n      const plotMode = 'bar'\n      return {plotType, plotMode}\n    }\n    if (plotTitle === \"Distribution\") {\n      const plotType = 'scatter'\n      const plotMode = 'lines'\n      return {plotType, plotMode}\n    } else {\n      return (\"\", \"\")\n    }\n  }\n\n  let {plotType, plotMode} = kindOfPlot()\n\n  console.log(data)\n  console.log(plotType)\n  console.log(plotMode)\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n        <>\n          <StyledHeader>\n            <Container>\n              <Title>Results</Title>\n            </Container>\n          </StyledHeader>\n\n          <StyledBody>\n            <Container>\n              <ResultsFlex>\n                <Plot \n                  x={x}\n                  y={y} \n                  plotTitle={plotTitle}\n                  plotMode={plotMode}\n                  plotType={plotType}\n                  xtitle={xtitle}\n                  ytitle={ytitle}\n                />\n              </ResultsFlex>\n            </Container>\n          </StyledBody>\n        </>\n    </ThemeProvider >\n  );\n};\n  \nexport default Results;\n","import React from 'react';\nimport { ThemeProvider } from \"styled-components\";\nimport { Container } from \"./components/styles/Container.styled\"\nimport Header from \"./components/Header\"\nimport Body from \"./components/Body\"\nimport Results from './components/Results';\nimport { GlobalStyles } from \"./components/styles/Global\";\n\nconst theme = {\n  colors: {\n    header: \"#e4d5061\",\n    body: \"#4d5061\",\n    footer: \"#003333\"\n  }\n}\nfunction App() {\n  return(\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n        <>\n          <Header />\n          <Body />\n        </>\n    </ThemeProvider>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport App from './App';\nimport Results from './components/Results'\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />} />\n      <Route path=\"/results\" element={<Results />} />\n    </Routes>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}